Give me a calendar table for 2024 that flags every date where any promotion overlaps at least two other promotions for the same toy. Columns: cal_date, toy_id, num_overlaps.
For each toy, show the longest consecutive‑day stretch without a sale (using date_sold) in 2023–2024. Return toy_id, start_gap, end_gap, days_idle (TOP 20 widest gaps).
Amazon adds a JSON column extra_attrs (sample: {\"age_bracket\":\"3‑5\",\"battery\":\"AA\"}). Parse it and give the top three battery types by 2024 sales revenue.
For every promotion that ran in 2024, how much incremental revenue did it generate versus the toy’s 30‑day baseline, and what was the lift (%)?
Give me a calendar table for 2024 that flags every date where any promotion overlaps at least two other promotions for the same toy. Columns: cal_date, toy_id, num_overlaps.
For each toy, show the longest consecutive‑day stretch without a sale (using date_sold) in 2023–2024. Return toy_id, start_gap, end_gap, days_idle (TOP 20 widest gaps).
Amazon adds a JSON column extra_attrs (sample: {\"age_bracket\":\"3‑5\",\"battery\":\"AA\"}). Parse it and give the top three battery types by 2024 sales revenue.
For every promotion that ran in 2024, how much incremental revenue did it generate versus the toy’s 30‑day baseline, and what was the lift (%)?
For every promotion that ran in 2024, how much incremental revenue did it generate versus the toy’s 30‑day baseline, and what was the lift (%)?
For every promotion that ran in 2024, how much incremental revenue did it generate versus the toy’s 30‑day baseline, and what was the lift (%)?
